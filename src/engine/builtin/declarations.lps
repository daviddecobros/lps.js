/*
  This file is part of the lps.js project, released open source under
  the BSD 3-Clause license. For more info, please see https://github.com/mauris/lps.js
 */

fluent(F) <-
  fluents(L),
  member(F, L).
action(F) <-
  actions(L),
  member(F, L).
event(F) <-
  events(L),
  member(F, L).

observe(F, T, T2) <-
  observe(F, T),
  T2 = T + 1.

loadModule(F) <- loadModules(L), member(F, L).

fluentActorDeclare(update, A, Old, New, []) <-
  updates(A, Old, New).
fluentActorDeclare(update, A, Old, New, Conds) <-
  updates(A, Old, New, Conds).

fluentActorDeclare(terminate, A, F, 0, []) <-
  terminates(A, F).
fluentActorDeclare(terminate, A, F, 0, Conds) <-
  terminates(A, F, Conds).

fluentActorDeclare(initiate, A, 0, F, []) <-
  initiates(A, F).
fluentActorDeclare(initiate, A, 0, F, Conds) <-
  initiates(A, F, Conds).
