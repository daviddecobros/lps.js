#!/usr/bin/env node
const net = require('net');
const LPS = require('../src/LPS');
const Program = require('../src/parser/Program');

const SERVER_PORT = 8040;
const args = process.argv.slice(2);

if (args.length === 0) {
  console.log('Logic Production Systems (LPS)');
  console.log('File argument to LPS program required');
  console.log('\tTry running for example: $ lps examples/bank.lps');
  process.exit(-1);
}

let file = args[0];
console.log('Loading file: ' + file);

LPS.load(file)
  .then((engine) => {
    console.log('File loaded.');
    console.log('Cycle Interval set to ' + engine.getCycleInterval() + 'ms');
    engine.on('postCycle', () => {
      console.log('[ Time ' + engine.getCurrentTime() + ' ] -------------- ' + engine.getLastCycleExecutionTime() + 'ms');
      console.log('Actions:\t' + engine.getLastStepActions());
      console.log('Fluents:\t' + engine.getActiveFluents());
      console.log('Obs:\t' + engine.getLastStepObservations());
      console.log('');
    });
    engine.on('done', () => {
      console.log('Execution complete');
      process.exit(0);
    });
    engine.run();

    const server = net.createServer((socket) => {
      socket.on('data', (data) => {
        let strData = data.toString('utf8');
        let literal = Program.literal(strData);
        engine.observe(literal);
      });
    });
    server.on('error', (err) => {
      console.log(err);
    });
    server.listen(SERVER_PORT, '127.0.0.1');
    
    console.log('TCP Server now listening on ' + SERVER_PORT);
    console.log('');
  });
